@font-face {
    font-family: JetBrainsMono;
    src: url('../assets/font/JetBrainsMono/JetBrainsMono-Regular.ttf');
    font-weight: 400;
  }
  
  @font-face {
    font-family: JetBrainsMono;
    src: url('../assets/font/JetBrainsMono/JetBrainsMono-SemiBold.ttf');
    font-weight: 600;
  }
  
  @font-face {
    font-family: JetBrainsMono;
    src: url('../assets/font/JetBrainsMono/JetBrainsMono-Bold.ttf');
    font-weight: 700;
  }
  
  @font-face {
    font-family: ChivoMono;
    src: url('../assets/font/ChivoMono/ChivoMono-Regular.ttf');
  }
  
  @font-face {
    font-family: RobotoMono;
    src: url('../assets/font/RobotoMono/RobotoMono-Regular.ttf');
}


body {
    font-family: 'JetBrainsMono', serif;
    background: rgb(0,0,0);
    /*background: linear-gradient(190deg, rgba(253,253,253,1) 0%, rgba(205,214,229,1) 61%, rgba(205,214,229,1) 100%); */
    /*background-repeat: no-repeat;*/
    background-size: contain;
    font-size: 11px;
    padding: 0;
    margin: 0;
    overflow: hidden; 
    /*cursor: none;*/
}
  
video {
    display: none;
}

.bar-container {
    color: white;
}

:root {
    --dfBackgroundColor: rgba(0, 0, 0, 1);
    --dfBackgroundSize: 29px;
    --dfBackgroundImage: radial-gradient(rgba(255, 255, 255, 0.5) 1px, transparent 1px);

    --dfNodeType: flex;
    --dfNodeTypeFloat: none;
    --dfNodeBackgroundColor: rgba(238, 238, 238, 1);
    --dfNodeTextColor: #000000;
    --dfNodeBorderSize: 0px;
    --dfNodeBorderColor: #000000;
    --dfNodeBorderRadius: 12px;
    --dfNodeMinHeight: 20px;
    --dfNodeMinWidth: 200px;
    --dfNodePaddingTop: 5px;
    --dfNodePaddingBottom: 5px;
    --dfNodeBoxShadowHL: 0px;
    --dfNodeBoxShadowVL: 2px;
    --dfNodeBoxShadowBR: 15px;
    --dfNodeBoxShadowS: 2px;
    --dfNodeBoxShadowColor: #000000;

    --dfNodeHoverBackgroundColor: #ffffff;
    --dfNodeHoverTextColor: #000000;
    --dfNodeHoverBorderSize: 0px;
    --dfNodeHoverBorderColor: #000000;
    --dfNodeHoverBorderRadius: 12px;

    --dfNodeHoverBoxShadowHL: 0px;
    --dfNodeHoverBoxShadowVL: 0px;
    --dfNodeHoverBoxShadowBR: 5px;
    --dfNodeHoverBoxShadowS: 2px;
    --dfNodeHoverBoxShadowColor: #4ea9ff;

    --dfNodeSelectedBackgroundColor: rgba(133, 133, 133, 1);
    --dfNodeSelectedTextColor: rgba(0, 0, 0, 1);
    --dfNodeSelectedBorderSize: 0px;
    --dfNodeSelectedBorderColor: #000000;
    --dfNodeSelectedBorderRadius: 12px;

    --dfNodeSelectedBoxShadowHL: 0px;
    --dfNodeSelectedBoxShadowVL: 2px;
    --dfNodeSelectedBoxShadowBR: 15px;
    --dfNodeSelectedBoxShadowS: 2px;
    --dfNodeSelectedBoxShadowColor: #4ea9ff;

    --dfInputBackgroundColor: #ffffff;
    --dfInputBorderSize: 2px;
    --dfInputBorderColor: #000000;
    --dfInputBorderRadius: 50px;
    --dfInputLeft: -27px;
    --dfInputHeight: 20px;
    --dfInputWidth: 20px;

    --dfInputHoverBackgroundColor: #ffffff;
    --dfInputHoverBorderSize: 2px;
    --dfInputHoverBorderColor: #000000;
    --dfInputHoverBorderRadius: 50px;

    --dfOutputBackgroundColor: #ffffff;
    --dfOutputBorderSize: 2px;
    --dfOutputBorderColor: #000000;
    --dfOutputBorderRadius: 50px;
    --dfOutputRight: -3px;
    --dfOutputHeight: 20px;
    --dfOutputWidth: 20px;

    --dfOutputHoverBackgroundColor: #ffffff;
    --dfOutputHoverBorderSize: 2px;
    --dfOutputHoverBorderColor: #000000;
    --dfOutputHoverBorderRadius: 50px;

    --dfLineWidth: 2px;
    --dfLineColor: rgba(242, 255, 0, 1);
    --dfLineHoverColor: rgba(255, 98, 0, 1);
    --dfLineSelectedColor: rgba(254, 76, 0, 1);

    --dfRerouteBorderWidth: 2px;
    --dfRerouteBorderColor: #000000;
    --dfRerouteBackgroundColor: #ffffff;

    --dfRerouteHoverBorderWidth: 2px;
    --dfRerouteHoverBorderColor: #000000;
    --dfRerouteHoverBackgroundColor: #ffffff;

    --dfDeleteDisplay: block;
    --dfDeleteColor: #ffffff;
    --dfDeleteBackgroundColor: #000000;
    --dfDeleteBorderSize: 2px;
    --dfDeleteBorderColor: #ffffff;
    --dfDeleteBorderRadius: 50px;
    --dfDeleteTop: -15px;

    --dfDeleteHoverColor: #000000;
    --dfDeleteHoverBackgroundColor: #ffffff;
    --dfDeleteHoverBorderSize: 2px;
    --dfDeleteHoverBorderColor: #000000;
    --dfDeleteHoverBorderRadius: 50px;

}

#drawflow {
    background: var(--dfBackgroundColor);
    background-size: var(--dfBackgroundSize) var(--dfBackgroundSize);
    background-image: var(--dfBackgroundImage);
}

.drawflow .drawflow-node {
    display: var(--dfNodeType);
    background: var(--dfNodeBackgroundColor);
    color: var(--dfNodeTextColor);
    border: var(--dfNodeBorderSize)  solid var(--dfNodeBorderColor);
    border-radius: var(--dfNodeBorderRadius);
    min-height: var(--dfNodeMinHeight);
    width: auto;
    min-width: var(--dfNodeMinWidth);
    padding-top: var(--dfNodePaddingTop);
    padding-bottom: var(--dfNodePaddingBottom);
    -webkit-box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
    box-shadow:  var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
}

.drawflow .drawflow-node:hover {
    background: var(--dfNodeHoverBackgroundColor);
    color: var(--dfNodeHoverTextColor);
    border: var(--dfNodeHoverBorderSize)  solid var(--dfNodeHoverBorderColor);
    border-radius: var(--dfNodeHoverBorderRadius);
    -webkit-box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
    box-shadow:  var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
}

.drawflow .drawflow-node.selected {
    background: var(--dfNodeSelectedBackgroundColor);
    color: var(--dfNodeSelectedTextColor);
    border: var(--dfNodeSelectedBorderSize)  solid var(--dfNodeSelectedBorderColor);
    border-radius: var(--dfNodeSelectedBorderRadius);
    -webkit-box-shadow: var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
    box-shadow:  var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
}

.drawflow .drawflow-node .input {
    left: var(--dfInputLeft);
    background: var(--dfInputBackgroundColor);
    border: var(--dfInputBorderSize)  solid var(--dfInputBorderColor);
    border-radius: var(--dfInputBorderRadius);
    height: var(--dfInputHeight);
    width: var(--dfInputWidth);
}

.drawflow .drawflow-node .input:hover {
    background: var(--dfInputHoverBackgroundColor);
    border: var(--dfInputHoverBorderSize)  solid var(--dfInputHoverBorderColor);
    border-radius: var(--dfInputHoverBorderRadius);
}

.drawflow .drawflow-node .outputs {
    float: var(--dfNodeTypeFloat);
}

.drawflow .drawflow-node .output {
    right: var(--dfOutputRight);
    background: var(--dfOutputBackgroundColor);
    border: var(--dfOutputBorderSize)  solid var(--dfOutputBorderColor);
    border-radius: var(--dfOutputBorderRadius);
    height: var(--dfOutputHeight);
    width: var(--dfOutputWidth);
}

.drawflow .drawflow-node .output:hover {
    background: var(--dfOutputHoverBackgroundColor);
    border: var(--dfOutputHoverBorderSize)  solid var(--dfOutputHoverBorderColor);
    border-radius: var(--dfOutputHoverBorderRadius);
}

.drawflow .connection .main-path {
    stroke-width: var(--dfLineWidth);
    stroke: var(--dfLineColor);
}

.drawflow .connection .main-path:hover {
    stroke: var(--dfLineHoverColor);
}

.drawflow .connection .main-path.selected {
    stroke: var(--dfLineSelectedColor);
}

.drawflow .connection .point {
    stroke: var(--dfRerouteBorderColor);
    stroke-width: var(--dfRerouteBorderWidth);
    fill: var(--dfRerouteBackgroundColor);
}

.drawflow .connection .point:hover {
    stroke: var(--dfRerouteHoverBorderColor);
    stroke-width: var(--dfRerouteHoverBorderWidth);
    fill: var(--dfRerouteHoverBackgroundColor);
}

.drawflow-delete {
    display: var(--dfDeleteDisplay);
    color: var(--dfDeleteColor);
    background: var(--dfDeleteBackgroundColor);
    border: var(--dfDeleteBorderSize) solid var(--dfDeleteBorderColor);
    border-radius: var(--dfDeleteBorderRadius);
}

.parent-node .drawflow-delete {
    top: var(--dfDeleteTop);
}

.drawflow-delete:hover {
    color: var(--dfDeleteHoverColor);
    background: var(--dfDeleteHoverBackgroundColor);
    border: var(--dfDeleteHoverBorderSize) solid var(--dfDeleteHoverBorderColor);
    border-radius: var(--dfDeleteHoverBorderRadius);
}

  